{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dd-manage-deposit \u00b6 Service that manages and maintains information about deposits in a deposit area SYNOPSIS \u00b6 dd-manage-deposit { server | check } DESCRIPTION \u00b6 Purpose and context \u00b6 Service that manages and maintains information about deposits in a deposit area. A deposit area is a collection of directories that are used to receive and process deposits. See also: deposit-directory , dd-sword2 , dd-ingest-flow . Interfaces \u00b6 The service has the following interfaces. Management & Report \u00b6 Protocol type : HTTP Internal or external : internal Purpose : Generating deposit reports and cleaning up the deposit area. See API for details. Deposit boxes \u00b6 Protocol type : Shared filesystem Internal or external : internal Purpose : Monitoring changes in the contents of the deposit boxes and keeping the information in the database in sync. ARGUMENTS \u00b6 positional arguments: {server,check} available commands named arguments: -h, --help show this help message and exit -v, --version show the application version and exit EXAMPLES \u00b6 INSTALLATION AND CONFIGURATION \u00b6 Currently, this project is built as an RPM package for RHEL8/Rocky8 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-manage-deposit and the configuration files to /etc/opt/dans.knaw.nl/dd-manage-deposit . For installation on systems that do no support RPM and/or systemd: Build the tarball (see next section). Extract it to some location on your system, for example /opt/dans.knaw.nl/dd-manage-deposit . Start the service with the following command /opt/dans.knaw.nl/dd-manage-deposit/bin/dd-manage-deposit server /opt/dans.knaw.nl/dd-manage-deposit/cfg/config.yml BUILDING FROM SOURCE \u00b6 Prerequisites: Java 11 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/dd-manage-deposit.git cd dd-manage-deposit mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"Manual"},{"location":"#dd-manage-deposit","text":"Service that manages and maintains information about deposits in a deposit area","title":"dd-manage-deposit"},{"location":"#synopsis","text":"dd-manage-deposit { server | check }","title":"SYNOPSIS"},{"location":"#description","text":"","title":"DESCRIPTION"},{"location":"#purpose-and-context","text":"Service that manages and maintains information about deposits in a deposit area. A deposit area is a collection of directories that are used to receive and process deposits. See also: deposit-directory , dd-sword2 , dd-ingest-flow .","title":"Purpose and context"},{"location":"#interfaces","text":"The service has the following interfaces.","title":"Interfaces"},{"location":"#management-report","text":"Protocol type : HTTP Internal or external : internal Purpose : Generating deposit reports and cleaning up the deposit area. See API for details.","title":"Management &amp; Report"},{"location":"#deposit-boxes","text":"Protocol type : Shared filesystem Internal or external : internal Purpose : Monitoring changes in the contents of the deposit boxes and keeping the information in the database in sync.","title":"Deposit boxes"},{"location":"#arguments","text":"positional arguments: {server,check} available commands named arguments: -h, --help show this help message and exit -v, --version show the application version and exit","title":"ARGUMENTS"},{"location":"#examples","text":"","title":"EXAMPLES"},{"location":"#installation-and-configuration","text":"Currently, this project is built as an RPM package for RHEL8/Rocky8 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-manage-deposit and the configuration files to /etc/opt/dans.knaw.nl/dd-manage-deposit . For installation on systems that do no support RPM and/or systemd: Build the tarball (see next section). Extract it to some location on your system, for example /opt/dans.knaw.nl/dd-manage-deposit . Start the service with the following command /opt/dans.knaw.nl/dd-manage-deposit/bin/dd-manage-deposit server /opt/dans.knaw.nl/dd-manage-deposit/cfg/config.yml","title":"INSTALLATION AND CONFIGURATION"},{"location":"#building-from-source","text":"Prerequisites: Java 11 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/dd-manage-deposit.git cd dd-manage-deposit mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"BUILDING FROM SOURCE"},{"location":"arch/","text":"DANS Data Station Architecture \u00b6 This module is a component in the DANS Data Station Architecture .","title":"\u21d2 DANS Data Station Architecture"},{"location":"arch/#dans-data-station-architecture","text":"This module is a component in the DANS Data Station Architecture .","title":"DANS Data Station Architecture"},{"location":"to-api/","text":"The API is documented using the OpenAPI standard. The API definition files can be downloaded from docs/api/ or viewed in Swagger UI in a new tab .","title":"API"}]}